Results

Q1.

Question 1
Core_num: 4
[(u'1', 798), (u'', 32), (u'0.5', 11659), (u'0.25', 126)]
Time: 2.55168104172
Core_num: 8
[(u'1', 798), (u'', 32), (u'0.5', 11659), (u'0.25', 126)]
Time: 2.47842001915

Q2.
Question 2
Core_num: 4
Time: 2.94579696655
Percentage time UP = 0
Percentage time DOWN = 1
Core_num: 8
Time: 3.07276701927
Percentage time UP = 0
Percentage time DOWN = 1

Q3.

Question 3
Total number of jobs: 672004
Total number of tasks: 25424731
Core_num: 4
Time: 664.296690941
Average number of tasks/job: 37.8341959274
Total number of jobs: 672004
Total number of tasks: 25424731
Core_num: 8
Time: 396.689378023
Average number of tasks/job: 37.8341959274

Q4.

Question 4
Core_num: 4
Time: 1287.85023284
[(0, (0.0, 3.474368493480847)), (1, (1.0000023245110392, 4.262960311298518)), (2, (2.0000025707337388, 3.552137568256608)), (3, (2.999806538982395, 5.853066357129038))]
Core_num: 8
Time: 934.001484156
[(0, (0.0, 3.474368493480847)), (1, (1.0000023245110392, 4.262960311298518)), (2, (2.0000025707337388, 3.5521375682566085)), (3, (2.999806538982395, 5.853066357129038))]

Q5.

Question 5
Core_num: 4
Time: 894.808634043
[(0, 0.8174734801289467), (1, 0.18816278252703708), (2, 0.042669161097669564), (3, 0.14897760467380722), (4, 0.003068518051438212), (6, 0.0006595976141947908), (8, 0.011767708496937333), (9, 0.05877339146047948), (10, 0.3585174625801853)]
Core_num: 8
Time: 565.143631935
[(0, 0.8174734801289467), (1, 0.18816278252703708), (2, 0.042669161097669564), (3, 0.14897760467380722), (4, 0.003068518051438212), (6, 0.0006595976141947908), (8, 0.011767708496937333), (9, 0.05877339146047948), (10, 0.3585174625801853)]

Q6.
Question 6
Core_num: 4
Time: 29.9430911541
[(32, 2), (4, 19), (1000, 1), (972, 2), (956, 1), (12, 4), (3588, 1), (60, 1), (16, 2), (1992, 1), (20, 3), (8, 4), (100, 5), (200, 2), (988, 1), (2100, 1), (1, 832), (101, 1), (1057, 1), (9, 3), (193, 1), (13, 5), (29, 1), (17, 1), (969, 1), (973, 1), (949, 1), (201, 2), (25, 1), (221, 1), (21, 1), (189, 17), (981, 1), (198, 2), (2, 91), (34, 1), (22, 1), (6, 19), (470, 1), (10, 2), (46, 1), (18, 2), (14, 1), (190, 2), (50, 13), (30, 3), (374, 1), (1938, 1), (1050, 7), (38, 1), (102, 1), (3710, 1), (3, 10), (235, 1), (39, 1), (779, 1), (2111, 1), (7, 1), (1963, 1), (379, 1), (15, 50), (11, 2), (963, 1), (155, 1), (55, 7), (111, 1), (95, 1), (199, 1), (31, 2)]
weighted_average = 41
Core_num: 8
Time: 31.0011329651
[(32, 2), (1000, 1), (16, 2), (1992, 1), (8, 4), (200, 2), (1, 832), (1057, 1), (201, 2), (193, 1), (17, 1), (9, 3), (969, 1), (25, 1), (2, 91), (34, 1), (10, 2), (50, 13), (18, 2), (1050, 7), (1938, 1), (779, 1), (379, 1), (11, 2), (1963, 1), (3, 10), (235, 1), (155, 1), (963, 1), (4, 19), (972, 2), (956, 1), (12, 4), (3588, 1), (2100, 1), (100, 5), (60, 1), (988, 1), (20, 3), (101, 1), (13, 5), (973, 1), (29, 1), (221, 1), (949, 1), (21, 1), (189, 17), (981, 1), (22, 1), (198, 2), (470, 1), (46, 1), (14, 1), (190, 2), (3710, 1), (374, 1), (6, 19), (38, 1), (102, 1), (30, 3), (39, 1), (2111, 1), (7, 1), (15, 50), (55, 7), (111, 1), (95, 1), (199, 1), (31, 2)]
weighted_average = 41


Q7.




Q8: 
Question 8
Core_num: 4
Time: 2911.44109702
[(0, 0.004483260003604266), (1, 0.008173574565068233), (2, 0.007493330370342444), (3, 0.0016944166666666668), (4, 0.007114411785381281), (5, 0.0009637142857142858), (6, 0.003377116299119668), (8, 0.00826012809673595), (9, 0.03823791028934198), (10, 0.036633781233201095), (11, 0.025670140276744607)]
Core_num: 8
Time: 2362.76699805
[(0, 0.004483260003604267), (1, 0.008173574565068233), (2, 0.0074933303703424384), (3, 0.0016944166666666668), (4, 0.007114411785381269), (5, 0.0009637142857142856), (6, 0.003377116299119668), (8, 0.008260128096735951), (9, 0.038237910289341974), (10, 0.03663378123320109), (11, 0.02567014027674461)]


Q9: 
Question 9
Core_num: 4
Time: 287.411177874
Core_num: 8
Time: 211.951627016








___________________________________________________
Q7

Used RAM
|            .
|     .   . 
|    . .
| .
|______________ Requested RAM

From task events:

(job_ID, task_id, req_RAM)


From usage:

(job_ID, task_id, start, end, used_RAM)

[((1,0),1),((1,0),2),((1,1),1),((1,1),1),((1,0),1.5)]

________________________________

(job_ID, task_id, req_RAM)

((1,0), AV_mem_used)


t1 requests 1GB

|600s.............900s|...............1200s|..................1500s
                  900MB                 1GB					   1.2GB
t1                t1    		        t1




_______________________
Q8

((job_ID, task_index), prio)

((job_ID, task_id), used_RAM)

used_RAM
|
|
|
|
|
|__________________ priority


__________________________________________

Q9

(time_stamp, event_type)

task usage
((job_ID, task_index), interval1(0-5min), average_RAM)

________________________________________________________

TODOs:

1.  Find some more new questions(check the paper cited in the project)(3-4).
	(2.) Comment the remaining code.
	(3.) Change the for loops(with set).
	(4.) Add a functionality to save the output(in csv format for example). (in utils.py) Marian
	(5.) Add a functionality to plot the outputs.                           (in utils.py) Marian
	(6.) Add time measurement in each function
	(7.) Create a project in overleaf and add the existing doccument.
8. Create some scenarions of Studying the performance: nb of cores, ram
	A. 8 cores, 32 GB RAM
	B. 4 cores, 32 GB RAM
	

	A':  4 cores, 32 GB RAM
	A':  4 cores, 16 GB RAM


9. Start running.
10. Spark Dataframe, Pandas(Marian)
11. Working in the Cloud   (Mahdis)
12. Study of related publications


Q9(change) Modify the interval from 5min to 60min.
(Q10.) What is the distribution of the machines according to their RAM capacity?
Q11. Figure 1. Frequency of machine shapes as a function of CPU and
memory (RAM) capacity.(in the paper)
Q12. What is the distribution of ressourcescosnsumption over jobs?
Q13. How many events/tasks are Evict,Fails,etc.?









